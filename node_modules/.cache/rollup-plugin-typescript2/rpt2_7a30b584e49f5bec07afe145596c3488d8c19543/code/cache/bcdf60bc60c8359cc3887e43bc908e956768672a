{"code":"export default function injectHandleJsError() {\r\n    window.addEventListener(\"error\", function (event) {\r\n        // 监听语法、引用等js错误\r\n        const reportData = {\r\n            kind: \"stability\",\r\n            type: \"error\",\r\n            errorType: \"jsError\",\r\n            message: event.message,\r\n            fileName: event.filename,\r\n            position: (event.lineno || 0) + \":\" + (event.colno || 0), // 异常位置\r\n        };\r\n        console.log(\"jsError\", reportData);\r\n    });\r\n    window.addEventListener(\"unhandledrejection\", function (event) {\r\n        // 监听未被catch的promise错误\r\n        const reportData = {\r\n            kind: \"stability\",\r\n            type: \"error\",\r\n            errorType: \"promiseError\",\r\n            message: \"\",\r\n            fileName: \"\",\r\n            position: \"\",\r\n        };\r\n        if (event.reason instanceof Error) {\r\n            // promise的回调中发生了错误 或是 reject了一个Error的实例\r\n            reportData.message = event.reason.message;\r\n        }\r\n        else {\r\n            // reject了字符串等其他内容\r\n            reportData.message = event.reason;\r\n        }\r\n        console.log(\"promiseError\", reportData);\r\n    });\r\n}\r\n","references":[]}
