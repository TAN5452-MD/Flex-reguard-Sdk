{"code":"//接口异常采集\r\nfunction requestCatch(type1, type2) {\r\n    let oldopen = XMLHttpRequest.prototype[type1];\r\n    let oldosend = XMLHttpRequest.prototype[type2];\r\n    let logData = {\r\n        method: '',\r\n        url: '',\r\n    };\r\n    XMLHttpRequest.prototype.open = function (method, url, async) {\r\n        logData = {\r\n            method,\r\n            url,\r\n        };\r\n        return oldopen.apply(this, arguments);\r\n    };\r\n    let startTime;\r\n    XMLHttpRequest.prototype.send = function (body) {\r\n        if (logData) {\r\n            //发送时候记录时间\r\n            startTime = Date.now();\r\n            const handler = (type) => (event) => {\r\n                let duration = Date.now() - startTime;\r\n                let status = this.status;\r\n                let statusText = this.statusText;\r\n                let requestInfo = {\r\n                    type: 'xhr',\r\n                    eventType: event.type,\r\n                    pathName: logData.url,\r\n                    status: status + '-' + statusText,\r\n                    duration,\r\n                    response: this.response ? JSON.stringify(this.response) : '',\r\n                    params: body || ''\r\n                };\r\n                reportTracker(requestInfo);\r\n            };\r\n            this.addEventListener('load', handler('load'), false);\r\n            this.addEventListener('error', handler('error'), false);\r\n            this.addEventListener('abort', handler('abort'), false);\r\n        }\r\n        oldosend.apply(this, arguments);\r\n    };\r\n}\r\nfunction reportTracker(params) {\r\n    let headers = {\r\n        type: 'application/x-www-form-urlencoded'\r\n    };\r\n    //封装blob\r\n    let blob = new Blob([JSON.stringify(params)], headers);\r\n    navigator.sendBeacon('http://localhost:9000/tracker', blob);\r\n}\r\nexport default requestCatch;\r\n","references":[]}
