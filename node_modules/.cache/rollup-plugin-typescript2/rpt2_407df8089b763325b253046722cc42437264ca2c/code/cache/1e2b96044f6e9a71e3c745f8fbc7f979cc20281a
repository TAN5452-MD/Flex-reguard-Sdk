{"code":"import { TrackerConfig } from \"../type/index\";\r\nimport { createHistoryEvent } from \"../utils/pv\";\r\nimport FPTracker from \"../utils/FP\";\r\nimport DOMTracker from \"../utils/DomReady\";\r\nimport injectHandleJsError from \"../utils/handleError/jsError\";\r\nimport injectHandleResourceError from \"../utils/handleError/resourceError\";\r\nexport default class Tracker {\r\n    constructor(options) {\r\n        this.MouseEventList = [\"click\", \"dblclick\", \"contextmenu\", \"mousedown\", \"mouseup\", \"mouseenter\", \"mouseout\", \"mouseover\"];\r\n        this.data = Object.assign(this.initDef(), options);\r\n        this.installTracker();\r\n    }\r\n    //初始化函数\r\n    initDef() {\r\n        window.history[\"pushState\"] = createHistoryEvent(\"pushState\");\r\n        window.history[\"replaceState\"] = createHistoryEvent(\"replaceState\");\r\n        return {\r\n            sdkVersion: TrackerConfig.version,\r\n            historyTracker: false,\r\n            hashTracker: false,\r\n            domTracker: false,\r\n            jsError: false,\r\n            resourceError: false,\r\n        };\r\n    }\r\n    //targetKey自定义 例如history-pv\r\n    captureEvents(mouseEventList, targetKey, data) {\r\n        mouseEventList.forEach((item) => {\r\n            window.addEventListener(item, () => {\r\n                console.log(\"监听到了\");\r\n                this.reportTracker({ item, targetKey, data });\r\n            });\r\n        });\r\n    }\r\n    //设置用户id\r\n    setUserId(uuid) {\r\n        this.data.uuid = uuid;\r\n    }\r\n    //上报请求\r\n    reportTracker(data) {\r\n        const params = Object.assign(this.data, data, { time: new Date().getTime() });\r\n        let headers = {\r\n            type: \"application/x-www-form-urlencoded\",\r\n        };\r\n        //封装blob\r\n        let blob = new Blob([JSON.stringify(params)], headers);\r\n        navigator.sendBeacon(this.data.requestUrl, blob);\r\n    }\r\n    //手动上报\r\n    sendReport(data) {\r\n        this.reportTracker(data);\r\n    }\r\n    //dom监听\r\n    targerKeyReport() {\r\n        this.MouseEventList.forEach((ev) => {\r\n            window.addEventListener(ev, (e) => {\r\n                const target = e.target;\r\n                const targetKey = target.getAttribute(\"target-key\");\r\n                if (targetKey) {\r\n                    console.log({\r\n                        event: ev,\r\n                        target: targetKey,\r\n                    }, \"监听到了\");\r\n                    this.reportTracker({\r\n                        event: ev,\r\n                        target: targetKey,\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n    jsError() {\r\n        injectHandleJsError();\r\n    }\r\n    resourceError() {\r\n        injectHandleResourceError();\r\n    }\r\n    installTracker() {\r\n        if (this.data.DOMTracker) {\r\n            DOMTracker();\r\n        }\r\n        //history模式监控\r\n        if (this.data.historyTracker) {\r\n            this.captureEvents([\"pushState\", \"replaceState\", \"popstate\"], \"history-pv\");\r\n        }\r\n        //hash模式\r\n        if (this.data.hashTracker) {\r\n            this.captureEvents([\"hashchange\"], \"hash-pv\");\r\n        }\r\n        //Fp监控\r\n        if (this.data.FPTracker) {\r\n            FPTracker(this.data.FCPTracker);\r\n        }\r\n        //dom监听\r\n        if (this.data.DOMTracker) {\r\n            this.targerKeyReport();\r\n        }\r\n        if (this.data.jsError) {\r\n            this.jsError();\r\n        }\r\n        if (this.data.resourceError) {\r\n            this.resourceError();\r\n        }\r\n    }\r\n}\r\n","references":["D:/LDJ/Learn/青训营/项目/SDK/src/type/index.ts","D:/LDJ/Learn/青训营/项目/SDK/src/type/index.ts","D:/LDJ/Learn/青训营/项目/SDK/src/utils/pv.ts","D:/LDJ/Learn/青训营/项目/SDK/src/utils/FP.ts","D:/LDJ/Learn/青训营/项目/SDK/src/utils/DomReady.ts","D:/LDJ/Learn/青训营/项目/SDK/src/utils/handleError/jsError.ts","D:/LDJ/Learn/青训营/项目/SDK/src/utils/handleError/resourceError.ts"]}
