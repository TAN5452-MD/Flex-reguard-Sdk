{"code":"// 兼容性判断\r\nconst compatibility = {\r\n    performance: !!window.performance,\r\n    getEntriesByType: !!(window.performance && performance.getEntriesByType),\r\n};\r\nfunction handleNavigationTiming() {\r\n    if (compatibility.getEntriesByType) {\r\n        setTimeout(() => {\r\n            const perfEntries = performance.getEntriesByType(\"navigation\");\r\n            const { fetchStart, connectStart, connectEnd, requestStart, responseStart, responseEnd, domInteractive, domComplete, redirectEnd, secureConnectionStart, redirectStart, domContentLoadedEventStart, domContentLoadedEventEnd, loadEventStart, domainLookupEnd, domainLookupStart } = perfEntries[0] || performance.timing;\r\n            const redirectTime = redirectEnd - redirectStart; // 重定向耗时\r\n            const appCache = domainLookupStart - fetchStart; // 读取缓存耗时\r\n            const DNSTime = domainLookupEnd - domainLookupStart; // DNS域名解析耗时\r\n            const connectTime = connectEnd - connectStart; // 建立TCP连接耗时\r\n            const SSLTime = connectEnd - secureConnectionStart; // SSL 安全连接耗时\r\n            const ttfbTime = requestStart - requestStart; // 发出页面请求到接收到应答数据第一个字节所花费的毫秒数\r\n            const responseTime = responseEnd - responseStart; // 请求响应完全接收耗时\r\n            const domContentLoadedTime = domContentLoadedEventEnd - domContentLoadedEventStart; // DOMContentLoaded事件回调函数执行耗时\r\n            const parseDOMTime = domComplete - domInteractive; // DOM解析的耗时\r\n            const resourceTime = domComplete - domContentLoadedEventEnd; // 资源加载耗时\r\n            const timeToInteractive = domInteractive - fetchStart; // 首次可交互耗时\r\n            const completeLoadTime = loadEventStart - fetchStart; // 完整的加载耗时\r\n            const logData = {\r\n                type: \"pagePerformance\",\r\n                URL: window.location.href,\r\n                DNSTime,\r\n                connectTime,\r\n                ttfbTime,\r\n                responseTime,\r\n                parseDOMTime,\r\n                domContentLoadedTime,\r\n                timeToInteractive,\r\n                completeLoadTime,\r\n            };\r\n            console.log(\"performanceIndex\", logData);\r\n        }, 3000);\r\n    }\r\n}\r\nexport default function init() {\r\n    if (document.readyState === \"complete\") {\r\n        if (compatibility.performance)\r\n            handleNavigationTiming();\r\n    }\r\n    else {\r\n        window.addEventListener(\"load\", () => {\r\n            if (compatibility.performance)\r\n                handleNavigationTiming();\r\n        });\r\n    }\r\n}\r\n","references":[]}
