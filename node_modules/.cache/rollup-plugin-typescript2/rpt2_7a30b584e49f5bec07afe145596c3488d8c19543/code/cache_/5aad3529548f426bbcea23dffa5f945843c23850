{"code":"//keyof 获取的是类型\r\nexport const createHistoryEvent = (type) => {\r\n    const origin = window.history[type];\r\n    //this是假参数\r\n    return function () {\r\n        const res = origin.apply(this, arguments);\r\n        const e = new Event(type);\r\n        /*\r\n            Event创建自定义事件\r\n            dispatchEvent派发事件\r\n            addEventListener监听事件\r\n            removeEventListener删除事件\r\n            其实也就是发布订阅模式\r\n        */\r\n        window.dispatchEvent(e);\r\n        return res;\r\n    };\r\n};\r\n// targetKey自定义 例如 history-pv\r\nexport function captureEvents(mouseEventList, targetKey, data) {\r\n    mouseEventList.forEach((item) => {\r\n        window.addEventListener(item, () => {\r\n            console.log(\"监听到了\");\r\n            if (data) {\r\n                data.stayTime = new Date().getTime() - data.startTime;\r\n                data.startTime = new Date().getTime();\r\n            }\r\n            console.log(data);\r\n        });\r\n    });\r\n}\r\n","references":["F:/gitwork/reGuard-sdk/src/type/index.ts"]}
